!---------------------------------------------------------------------------
!
!  VEC{MAT4_{INTRINSIC}}: Vector of MAT4{INTRINSIC} matrices
!
! Copyright (C) Dylan Jayatilaka, 2006
!
! This library is free software; you can redistribute it and/or
! modify it under the terms of the GNU Library General Public
! License as published by the Free Software Foundation; either
! version 2 of the License, or (at your option) any later version.
!
! This library is distributed in the hope that it will be useful,
! but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
! Library General Public License for more details.
!
! You should have received a copy of the GNU Library General Public
! License along with this library; if not, write to the
! Free Software Foundation, Inc., 59 Temple Place - Suite 330,
! Boston, MA  02111-1307, USA.
!
!---------------------------------------------------------------------------

virtual module VEC{MAT4_{INTRINSIC}}

   implicit none

contains

!  ==========
!  Allocation
!  ==========

   create(dim) ::: get_from(VEC{OBJECT}), leaky, PURE
   ! Allocate vector
   end

   create(bounds) ::: get_from(VEC{OBJECT}), leaky, PURE
   ! Allocate the vector with lower and upper bounds in "bounds"
   end

   destroy ::: get_from(OBJECT), leaky, PURE
   ! Deallocate "self"
   end

   create(dim,dim1,dim2,dim3,dim4) ::: leaky, PURE
   ! Allocate vector of fixed-shape matrices
      self :: allocatable, OUT
      dim,dim1,dim2,dim3,dim4 :: INT, IN

      .create(dim)
      .create_mat4(dim1,dim2,dim3,dim4)

   end

   create_mat4(dim1,dim2,dim3,dim4) ::: leaky, PURE
   ! Allocate the matrix subparts
      self :: INOUT
      dim1,dim2,dim3,dim4 :: INT, IN

      i :: INT

      do i = 1,.dim
         self(i).element.create(dim1,dim2,dim3,dim4)
      end

   end

!  ======
!  Sizing
!  ======

   lb result (res) ::: get_from(VEC{OBJECT}), pure
   ! Returns the lower bound of self
   end

   ub result (res) ::: get_from(VEC{OBJECT}), pure
   ! Returns the upper bound of self
   end

end
